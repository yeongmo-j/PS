"
[문제요약]
    1
  2   3
4   5   6
이런 형태로 삼각형 형태의 숫자들이 들어오는데,
맨위에서부터 시작해서, 왼쪽 대각선 혹은 오른쪽 대각선ㅇ ㅔ있는애들 선택해서
숫자 더해가면서 내려온다.
이떄 얻을 수 있는 최대값은?

[해결방법]
DP로 해결
배열
1
2 3
4 5 6
이런식을 저장하고
아래로 한칸, 아래 오른쪽으로 한칸씩 내려가면 됨
같은 크기의 배열을 하나 더 만들어서 여기는 점수를 기록
d[i][j]는 i,j까지 내려올 때까지 얻은 결과 중 최대의 값
for (i=1 ; i<=n-1 ; i++) {
  for (j=1 ; j<=i ; j++) {
    d[i+1][j] = Integer.max(d[i+1][j], d[i][j] + tri[i+1][j]);
    d[i+1][j+1] = Integer.max(d[i+1][j+1], d[i][j] + tri[i+1][j+1]);
  }
}
즉 이렇게 된다.
그리고 마지막엔 제일 아래의 행에서 제일 큰 값 리턴

Time complexity : O(N^2)
Space complexity : O(N^2)

[추가]
"
for (i=1 ; i<=n-1 ; i++) {
  for (j=1 ; j<=i ; j++) {
    d[i+1][j] = Integer.max(d[i+1][j], d[i][j] + tri[i+1][j]);
    d[i+1][j+1] = Integer.max(d[i+1][j+1], d[i][j] + tri[i+1][j+1]);
  }
}
